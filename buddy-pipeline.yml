- pipeline: "Build and Run PROD"
  trigger_mode: "MANUAL"
  ref_name: "master"
  ref_type: "BRANCH"
  fetch_all_refs: true
  trigger_condition: "ALWAYS"
  actions:
  - action: "Execute: go build"
    type: "BUILD"
    working_directory: "/src/github.com/speshiy/LinuxMonitorGo"
    docker_image_name: "library/golang"
    docker_image_tag: "1.14.0"
    execute_commands:
    - "export GOPATH=/"
    - "export GO15VENDOREXPERIMENT=1"
    - "rm -rf tuvis_build"
    - "mkdir tuvis_build"
    - "cp -r frontend/* tuvis_build/frontend"
    - "cp -r templates/* tuvis_build/templates"
    - "cp -r assets/* tuvis_build/assets"
    - "# Поменять tuvis-dev.service на tuvis.service если выкладываем в production"
    - "cp tuvis.service tuvis_build/tuvis.service"
    - "go build -ldflags=\"-s -w\" -o tuvis_build/tuvis-mysql-backup main.go"
    - "export GZIP=-9"
    - "tar -cvpf tuvis_build.tar tuvis_build"
    volume_mappings:
    - "/:/src/github.com/speshiy/LinuxMonitorGo"
    trigger_condition: "ALWAYS"
    shell: "SH"
  - action: "[139.162.176.101] Execute: mkdir /root/tuvis_preupdate"
    type: "SSH_COMMAND"
    login: "root"
    host: "${PROD_IP}"
    port: "22"
    env_key: "secure!Ir/R7abykYCmo8GTlFlxUA==.vjEyenMqJiHYoDX6i9mP+A=="
    authentication_mode: "ENV_KEY"
    commands:
    - "rm -rf /root/tuvis_preupdate"
    - "mkdir /root/tuvis_preupdate"
    trigger_condition: "ALWAYS"
    run_as_script: true
    shell: "SH"
  - action: "Upload files to 139.162.176.101"
    type: "SFTP"
    input_type: "BUILD_ARTIFACTS"
    local_path: "tuvis_build.tar"
    remote_path: "/root/tuvis_preupdate"
    login: "root"
    host: "${PROD_IP}"
    port: "22"
    env_key: "secure!Ir/R7abykYCmo8GTlFlxUA==.vjEyenMqJiHYoDX6i9mP+A=="
    authentication_mode: "ENV_KEY"
  - action: "Restart service: "
    type: "SSH_COMMAND"
    login: "root"
    host: "${PROD_IP}"
    port: "22"
    env_key: "secure!Ir/R7abykYCmo8GTlFlxUA==.vjEyenMqJiHYoDX6i9mP+A=="
    authentication_mode: "ENV_KEY"
    commands:
    - "#Останавливаем службу"
    - "systemctl stop tuvis"
    - "#Удаляем директорию и создаем снова"
    - "rm -rf /root/tuvis"
    - "mkdir /root/tuvis"
    - "#Копируем все из preupdate"
    - "cp -r /root/tuvis_preupdate/* /root/tuvis"
    - "#Удаляем папку preupdate"
    - "rm -rf /root/tuvis_preupdate"
    - "#Разархивируем обновления"
    - "tar -C /root/tuvis -xf /root/tuvis/tuvis_build.tar --strip 1"
    - "#Переходим внуть рабочего каталога"
    - "cd /root/tuvis"
    - "#Удаляем архив"
    - "rm -rf tuvis_build.tar"
    - "#Удаляем файл службы"
    - "cp -rf tuvis.service /lib/systemd/system/"
    - "#Перезагружаем демона сервисов"
    - "systemctl daemon-reload"
    - "#Создаем symlink для автозапуска службы"
    - "systemctl enable tuvis"
    - "#Стартуем службу"
    - "systemctl start tuvis"
    trigger_condition: "ALWAYS"
    ignore_errors: true
    run_as_script: true
    shell: "BASH"
    execute_every_command: true
  variables:
  - key: "PROD_IP"
    value: "secure!Kw8em27QZ6eGWT5MmQyBjw==.2hbt9/6B+Rv+Ny6oVd3RpQ=="
    id: 196747
    description: ""
